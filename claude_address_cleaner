import pandas as pd
import re

def clean_address(address):
    if pd.isna(address):
        return None
    
    # Remove any legal notices or court summons text
    legal_phrases = [
        "Notice to Defendant",
        "Each defendant is required",
        "A lawsuit has been filed",
        "Dated this",
        "Clerk of the Circuit Court",
        "Plaintiff's attorney",
        "whose address is"
    ]
    
    cleaned = address
    for phrase in legal_phrases:
        if phrase in cleaned:
            # Cut the address at the legal phrase
            cleaned = cleaned.split(phrase)[0].strip()
    
    # Find the first address with zip code pattern
    # Pattern matches:
    # - City, State ZIP format (Orlando, FL 32801)
    # - Just ZIP format (32801)
    pattern = r'(.+?(?:(?:[A-Z]{2}|[A-Za-z]+)\s+\d{5}(?:-\d{4})?))'
    match = re.search(pattern, cleaned)
    
    if match:
        first_address = match.group(1).strip()
        # Check if the address ends with a comma or other punctuation
        first_address = re.sub(r'[,;]$', '', first_address)
        return first_address
    
    # If no match found with ZIP, return the first line
    if '\n' in cleaned:
        return cleaned.split('\n')[0].strip()
    
    return cleaned.strip()

# Read the CSV file
df = pd.read_csv('data.csv')

# Apply the cleaning function to each row
df['Clean Address'] = df['defendant_address'].apply(clean_address)

# Save the updated DataFrame back to CSV
df.to_csv('data.csv', index=False)

# Print a sample of the results for verification
print("Sample of cleaned addresses:")
for i, row in df.head(1000).iterrows():
    original = row['defendant_address'] if not pd.isna(row['defendant_address']) else "N/A"
    cleaned = row['Clean Address'] if not pd.isna(row['Clean Address']) else "N/A"
    print(f"\nRow {i+1}:")
    print(f"Original: {original}")
    print(f"Cleaned: {cleaned}")